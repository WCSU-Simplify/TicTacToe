<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="muteBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACMAAAAjCAYAAAAe2bNZAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        cgAAEnIBXmVb4wAAAy9JREFUWEfNmD1PG0EQht1ARx/4CyDSBNJgChdIWCBkuzESuERCIMXuEidSkgYa
        OjpEyS9wgihTIAqcpABRIkhhEpQUVkDKR+PN+65nzdyHzdmcpbzSI7jd2Znx3e3O7iW61dTU1Bgogw/C
        T2Dkr2t7AcZkSLyC4yHwFnwBDBwV2nPckLjqXXAyAErgBwgLFpXvoAgGxHV3wsBh8BGEOe+VKhiWENGE
        ARPgmziIm69gQkJ1Fgyfgt8ysF/Q/6SEDBcMRsCVDIidTCZjstmsmZ6e5jXjjEhor9AxCPhMA04eSiqV
        MhsbG8aJCUnfMRiUFO6ERr7tHidRWVhYMAcHB+bm5ibQl8vlTKVSkTSMub29tfbK5pmk0BQauI5w+mmj
        e+HtLhaL5uLiohVI96+vr5vr62vbRx0dHZnl5WWPDWDcu3UIF29UZyTm5+fN3t6ehGnq7OzM9s3MzJjt
        7W1pbWpnZ8fMzs4G/AivJRWbTOSVdW5uzuzu7koIr05OTqxNrVaTFmPvTKlUMslkMuBLcekSeezraMva
        2po5Pz+XMEG5ZPi4qGq1avL5fMBPG8aZzCvdyFu5v79vtra2PBweHtoAneSS4btSLpdNOp1u+Y3ASybz
        XjcuLS2J63A1Gg35LyiXTI+8YzKfdSPXgF71wGQ+MRnWilbjyspKx1/fSXpqb25u2sfL92x1ddVSKBQ8
        LC4utuzBFZP5qxpsMt3KJa+TifKDONNU7D99uzP1et1en56e2sfHWeiHs03Ftnfmv3pnYp9NLBP8UazS
        2vc92NkU+zqj7y6rNau2jtEGu87EvgKzKrtVmGLVZvX2+/Mx7kpCrLWJsDqzSjtx5nBl1r4UzdpE4SLW
        qu3gI2e11mI1Z1XXdsBTtfuynyGs1qzael/Dqq5svPsZCg192ek5WL25rlC+pL07PQqN3ANzT6oNY4VV
        nNVcvTvhe2AKHX09HfiogfDTgRMMJkG/z02/QOSDHE+UnpoVI/T7REJFEwbwrB33OYr+HkmI7oSB/ArB
        Wdb1tPfB8b1/hdCCk16/z1wCLqgP/z4TJjgeBfwy5b5S1QED869rew5GZUhEJRL/AGB6pJAvobuEAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>